什么是进程
从用户的角度来看进程是程序的一次执行过程
从操作系统的核心来看，进程是操作系统分配的内存、CPU时间片等资源的基本单位。
进程是资源分配的最小单位
每一个进程都有自己独立的地址空间与执行状态。
像UNIX这样的多任务操作系统能够让许多程序同时运行，每一个运行着的程序就构成了一个进程


进程状态变迁
	运行状态（TASK_RUNNING）
	可中断睡眠状态（TASK_INTERRUPTIBLE）
	不可中断睡眠状态（TASK_UNINTERRUPTIBLE）
	暂停状态（TASK_STOPPED）
	僵死状态（TASK_ZOMBIE）

进程控制块
	进程描述信息
		进程标识符用于唯一的标识一个进程。
	进程控制信息
		进程当前状态
		进程优先级
		程序开始地址
		各种计时信息
		通信信息
	资源信息
		占用内存大小及管理用数据结构指针
		交换区相关信息
		I/O设备号、缓冲、设备相关的数结构
		文件系统相关指针
	现场保护信息
		寄存器
		PC
		程序状态字PSW
		栈指针


进程创建
	不同的操作系统所提供的进程创建原语的名称和格式不尽相同，但执行创建进程原语后，操作系统所做的工作却大致相同，都包括以下几点：
	给新创建的进程分配一个内部标识，在内核中建立进程结构。
	复制父进程的环境
	为进程分配资源， 包括进程映像所需要的所有元素（程序、数据、用户栈等），
	复制父进程地址空间的内容到该进程地址空间中。
	置该进程的状态为就绪，插入就绪队列。

进程撤消
	进程终止时操作系统做以下工作：
	关闭软中断:
		因为进程即将终止而不再处理任何软中断信号；
	回收资源：
		释放进程分配的所有资源，如关闭所有已打开文件，释放进程相应的数据结构等；
	写记帐信息：
		将进程在运行过程中所产生的记帐数据（其中包括进程运行时的各种统计信息）记录到一个全局记帐文件中；
	置该进程为僵死状态:
		向父进程发送子进程死的软中断信号，将终止信息status送到指定的存储单元中；
	转进程调度:
		因为此时CPU已经被释放，需要由进程调度进行CPU再分配。

终止进程的五种方法
	从main函数返回
	调用exit
	调用_exit
	调用abort
	由信号终止
